#???? 이 문제가 왜 Level3일까?
# 문제 접근
# 1. s의 길이 : 2,500  , 완전탐색을 해도 O(N**2) = 2500*2500  (완전탐색)  >> 실패(효율성 테스트도 있음)
# 2. 문자열을 절반만 봐도 되지 않을까 ?  >> 투 포인터 (시작 ->      <- 끝 )
#   string[start +1] ... == string[end-1...]

# def solution(s):
#     answer = 1                         # 팰린드롬이 안되면 최소값 1
#     for i in range(len(s)):            # 0부터 (s의 길이-1)까지
#         for j in range(1,len(s)+1):    # 1부터 s의 길이까지
#             if s[i:j] == s[i:j][::-1]: 
#                 answer = max(answer, len(s[i:j])) 
#     return answer

def solution(s):
    for answer in range(len(s), 0, -1):
        start = 0
        end = answer -1
        while end < len(s):
            if isPalindrome(s, start, end):
                return answer
            start += 1
            end += 1
    return 1   

def isPalindrome(s, start, end):
    for i in range((end-start)//2 + 1):
        if s[start+i] != s[end - i]: # 투 포인터, 시작과 끝에서 하나씩 비교 
            return False
    return True