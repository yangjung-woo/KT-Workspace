def solution(n):
    answer = 0
    dp = [0] *(n+1)
    dp[1] = 1
    dp[2] = 2
    
    for i in range(3,n+1):
        dp[i] = (dp[i-1] +dp[i-2])% 1000000007
        
    answer = dp[i]
    return answer


    # dp [1] : '1'
    # dp [2] : '2' , '11'      
    # dp [3] : '12' , '21' , '111'   >>   dp[1] + dp[2]
        #   dp[1](why? dp1에서 가로막대 2개 추가한 경우의수 = 1개) :1 *dp[1]
        #   dp[2] (dp2 에서 세로막대 1개 추가한 경우의수 = 1개)  1 * dp[2]
    # 
    #    dp4 는 dp[3] + dp[2]
        #   dp[2](why? dp1에서 가로막대 2개 추가한 경우의수 = 1개) :1 *dp[2]
        #   dp[3] (dp2 에서 세로막대 1개 추가한 경우의수 = 1개)  1 * dp[3]
    
    # 즉 점화식 dp[n] = dp[n-1]+dp[n-2]