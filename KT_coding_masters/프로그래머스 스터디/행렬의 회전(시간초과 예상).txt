# 문제접근 
# 0. 회전 애수  10000 만큼 회전 
# 1. n , m 행렬을 회전 > (x1,y1)  ~ (x2,y2)테두리 전부를 (시계방향으로) 일차원 배열에 저장 tmp
# 2. min(tmp) 로 최소값 저장 O(len(tmp)) >> 최대 100 x 100   10^4
# 3. 슬라이싱 해서 다시 재배열   >>예상 시간초과? maybe


def solution(rows, columns, queries):
    answer = []
    array = [[0 for col in range(columns)] for row in range(rows)]
    
    # array 생성 
    t = 1
    for row in range(rows):  # O(100x 100)  > 10**4
        for col in range(columns):
            array[row][col] = t
            t += 1
    for x1,y1,x2,y2 in queries:  #  O(N)  > 10**5
        tmp = []
        for i in range (x1-1,x2-1): # 윗변   >> 100  =10**2  > 
            tmp.append(array[i+1][y1-1])
        for i in range (y1-1,y2-1): # 오른쪽 변
            tmp.append(array[x2-1][i+1])
        for i in range (x2-1,x1-1,-1): # 밑변
            tmp.append(array[i-1][y2-1])
        for i in range (y2-1,y1-1,-1): # 왼쪽변
            tmp.append(array[x1-1][i-1])
         # 시간복잡도 >  10**5 x (4 x10**2) 
        answer.append(min(tmp))
        p = 0 # tmp idx 용 
        
        for i in range (x1-1,x2-1): # 윗변
            array[i][y1-1] =  tmp[p]
            p+=1
        for i in range (y1-1,y2-1): # 오른쪽 변
            array[x2-1][i] =  tmp[p]
            p+=1
        for i in range (x2-1,x1-1,-1): # 밑변
            array[i][y2-1] =  tmp[p]
            p+=1
        for i in range (y2-1,y1-1,-1): # 왼쪽변
            array[x1-1][i] =  tmp[p]
            p+=1
    
    #(10**5 x (4 x10**2) ) *2  =>  10**7 으로 예상
    return answer